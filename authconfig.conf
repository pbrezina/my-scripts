# A model for configuring PAM.
# 
# * Services have attributes and provide features.
# * Modules require features and are added if the service provides the features
#   it needs and has the attributes it is designed for, and if it is enabled.
# * When processing a stack for an application's configuration, we keep a set
#   of boolean flags.  TRUE is always set.  If a module includes any _if
#   clauses, the option is added if the flag is set.  If a module includes any
#   _set clauses, the named option is set.
# * I've run this by a couple of sysadmins, and they've sworn to kill me if we
#   start generating all of the PAM configuration files ourselves.
#
# ATTRIBUTES
#	IS_PRIMARY (is primary authentication service -- login/[gkx]dm/sshd)
#	IS_ADMIN (need not authenticate the superuser)
#	IS_CONSOLE (limited to console users)
#	IS_CONFIDENTIAL
# FEATURES
#	HAS_TTY
#
# Describing services:
# type([auth|account|session|password])
#	What facilities this service needs.  If not specified, all.
# provides(FEATURE)
#	The service provides the named FEATURE.
# has(ATTRIBUTE)
#	The service has the named ATTRIBUTE.
#
service adsl-config
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service apacheconf
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service chfn
	type(auth)
	type(account)
	has(IS_ADMIN)
service chsh
	type(auth)
	type(account)
	has(IS_ADMIN)
service firewall-config
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service gdm
	type(auth)
	type(account)
	type(session)
	has(IS_PRIMARY)
service halt
	type(auth)
	type(account)
	has(IS_CONSOLE)
	has(IS_ADMIN)
service imap
	type(auth)
	type(account)
service internet-config
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service isdn-config
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service kbdrate
	type(auth)
	type(account)
	has(IS_CONSOLE)
service kde
	type(auth)
	type(account)
	type(session)
	has(IS_PRIMARY)
service kppp
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service kscreensaver
	type(auth)
service linuxconf
	type(auth)
	type(account)
service linuxconf-pair
	type(auth)
	type(account)
service login
	type(auth)
	type(account)
	type(session)
	type(password)
	has(IS_PRIMARY)
	provides(HAS_TTY)
service mcserv
	type(auth)
	type(account)
service netcfg
	type(auth)
	type(account)
	type(session)
	has(IS_ADMIN)
service passwd
	type(auth)
	type(account)
	type(password)
service pop
	type(auth)
	type(account)
service poweroff
	type(auth)
	has(IS_CONSOLE)
	has(IS_ADMIN)
service reboot
	type(auth)
	has(IS_CONSOLE)
	has(IS_ADMIN)
service sshd
	type(auth)
	type(account)
	type(session)
	has(IS_CONFIDENTIAL)
	has(IS_PRIMARY)
	provides(HAS_TTY)
service xdm
	type(auth)
	type(account)
	type(session)
	has(IS_PRIMARY)

# Describing modules:
# description(TEXT)
#	A text description of the module and what it does.
# configuration(TEXT)
#	The name of the module's configuration file.
# type([auth|account|session|password])
#	What facilities this module provides.
# [auth_|account_|session_|password_]order(NUMBER)
#	The rough order this module should appear in in the stack, similar in
#	some ways to SysVinit's ordering.  Valid range 0 to 99, default 50.
# [auth_|account_|session_|password_]sense(logic)
#	Use this control flag when adding the module to a stack.
# [auth_|account_|session_|password_]use_when(ATTRIBUTE)
#	Use this module when the service has the named ATTRIBUTE. (OR)
# [auth_|account_|session_|password_]use_with(SERVICE)
#	Use this module with the service named SERVICE. (OR)
# [auth_|account_|session_|password_]requires(FEATURE)
#	Use this module only if the service has the named FEATURE. (AND)
# [auth_|account_|session_|password_]unless_when(ATTRIBUTE)
#	Never use this module when the service has the named ATTRIBUTE. (OR)
# [auth_|account_|session_|password_]toggle(on|off)
#	The user should be able to enable or disable use of this module.
# [auth_|account_|session_|password_]mandatory
#	This module must always be used.
# [auth_|account_|session_|password_]set(FLAG)
#	Set a boolean FLAG for the period when we're generating a configuration
#	for this service.
# [auth_|account_|session_|password_]if(FLAG,OPTION)
#	If the boolean FLAG is set, add OPTION to the list of options.
# global_[auth_|account_|session_|password_]if(FLAG,OPTION)
#	If the global FLAG is set, add OPTION to the list of options.
# arg_boolean(DESCRIPTION,OPTION,DEFAULT)
#	A boolean option, its meaning, and the initial value (omit the default
#	if it defaults to not being specified).
# arg_string(DESCRIPTION,OPTION,DEFAULT_VALUE)
#	A string option, its meaning, and a default value.
# arg_number(DESCRIPTION,OPTION,DEFAULT_VALUE)
#	A numeric option, its meaning, and a default value.
# arg_enum(DESCRIPTION,OPTION,VALUE,VALUE[,VALUE]+)
#	An enumerated option, its default value, and list of possible values.
#
module pam_access
	description(Limit user logins by time of day and login source.)
	configuration(/etc/security/access.conf)
	type(account)
	requires(HAS_TTY)
	use_when(IS_PRIMARY)
	toggle(off)
module pam_chroot
	description(Restrict users to chroot jails.)
	configuration(/etc/security/chroot.conf)
	type(session)
	use_when(IS_PRIMARY)
	toggle(off)
	order(5)
	arg_boolean(Log debugging information to syslog,debug)
	arg_enum(Action to take if user has no entry in configuration file,onerr=,success,success,fail)
module pam_console
	description(Allow users at the console to perform certain operations.)
	configuration(/etc/security/console.perms)
	type(auth)
	type(session)
	auth_use_when(IS_CONSOLE)
	auth_sense(sufficient)
	auth_toggle(on)
	session_requires(HAS_TTY)
	session_use_when(IS_PRIMARY)
	session_sense(optional)
	session_mandatory
	order(10)
module pam_cracklib
	description(Perform password-strength checking when changing passwords.)
	type(password)
	sense(require)
	use_with(passwd)
	set(AUTHTOK)
	if(AUTHTOK,use_authtok)
	toggle(on)
	order(10)
	arg_boolean(Log debugging information to syslog,debug)
	arg_number(Number of times to attempt to get a satisfactory password from the user,retry=,3)
module pam_deny
	type(auth)
	type(account)
	type(session)
	type(password)
	sense(require)
	mandatory
	order(99)
module pam_env
	description(Set environment variables in interactive sessions.)
	configuration(/etc/security/pam_env.conf)
	type(auth)
	type(account)
	type(session)
	use_when(IS_PRIMARY)
	toggle(on)
	order(15)
module pam_group
	description(Modify group memberships for login sessions.)
	configuration(/etc/security/group.conf)
	type(auth)
	use_when(IS_PRIMARY)
	toggle(off)
module pam_krb5afs
	description(Use Kerberos 5 authentication, and obtain AFS tokens.)
	configuration(/etc/krb5.conf)
	type(auth)
	type(session)
	type(password)
	auth_sense(sufficient)
	auth_if(AUTHTOK,use_first_pass)
	auth_set(AUTHTOK)
	session_sense(required)
	password_sense(sufficient)
	password_if(AUTHTOK,use_authtok)
	password_set(AUTHTOK)
	toggle(off)
	arg_boolean(Log debugging information to syslog,debug)
	arg_boolean(Validate credentials using a host key in the default keytab,validate)
	conflicts(pam_krb5)
	order(60)
module pam_krb5
	description(Use Kerberos 5 authentication.)
	configuration(/etc/krb5.conf)
	type(auth)
	type(session)
	type(password)
	auth_sense(sufficient)
	auth_if(AUTHTOK,use_first_pass)
	auth_set(AUTHTOK)
	session_sense(required)
	password_sense(sufficient)
	password_if(AUTHTOK,use_authtok)
	password_set(AUTHTOK)
	toggle(off)
	conflicts(pam_krb5afs)
	arg_boolean(Log debugging information to syslog,debug)
	arg_boolean(Validate credentials using a host key in the default keytab,validate)
	order(60)
module pam_lastlog
	description(Maintain a log of previous logins in /var/log/lastlog.)
	type(session)
	requires(HAS_TTY)
	use_when(IS_PRIMARY)
	toggle(off)
module pam_ldap
	description(Use LDAP authentication.)
	configuration(/etc/ldap.conf)
	type(auth)
	type(account)
	type(session)
	type(password)
	auth_if(AUTHTOK,use_first_pass)
	auth_set(AUTHTOK)
	auth_sense(sufficient)
	account_sense(required)
	session_sense(required)
	password_if(AUTHTOK,use_authtok)
	password_set(AUTHTOK)
	password_sense(sufficient)
	toggle(off)
	order(65)
module pam_limits
	description(Enforce user resource limits.)
	configuration(/etc/security/limits.conf)
	type(session)
	use_when(IS_PRIMARY)
	toggle(on)
module pam_listfile
	description(Deny FTP access to users listed in /etc/ftpusers.)
	configuration(/etc/ftpusers)
	type(auth)
	use_with(ftp)
	use_with(mcserv)
	global_if(TRUE,item=user)
	global_if(TRUE,sense=deny)
	global_if(TRUE,file=/etc/ftpusers)
	global_if(TRUE,onerr=succeed)
	toggle(on)
	order(0)
module pam_mkhomedir
	description(Create a home directory for a user for whom the home directory does not exist.)
	type(session)
	use_when(IS_PRIMARY)
	toggle(off)
module pam_nologin
	description(Disallow access for non-root users when /etc/nologin exists.)
	type(account)
	use_when(IS_PRIMARY)
	toggle(on)
module pam_rhosts_auth
	description(Allow authentication using .rhosts files for rsh and rlogin.)
	type(auth)
	use_when(IS_PRIMARY)
	use_with(rlogin,rsh)
	toggle(off)
	arg_boolean(Log debugging information to syslog,debug)
	arg_boolean(Ignore the contents of /etc/hosts.equiv,no_hosts_equiv)
	arg_boolean(Ignore the contents of ~/.rhosts,no_rhosts)
	arg_boolean(Allow use of "+" as a wildcard,promiscuous)
	order(0)
module pam_rootok
	type(auth)
	use_when(IS_ADMIN)
	use_when(IS_CONSOLE)
	sense(sufficient)
	mandatory
	arg_boolean(Log debugging information to syslog,debug)
	order(5)
module pam_securetty
	description(Allow root to log in only at a secure terminal.)
	configuration(/etc/securetty)
	type(auth)
	type(account)
	use_when(IS_PRIMARY)
	requires(HAS_TTY)
	unless_when(IS_CONFIDENTAL)
	toggle(on)
	order(5)
module pam_shells
	description(Disallow logins for users with invalid shells.)
	configuration(/etc/shells)
	type(auth)
	type(account)
	use_when(IS_PRIMARY)
	toggle(on)
module pam_smb
	description(Use SMB authentication.)
	configuration(/etc/pam_smb.conf)
	type(auth)
	auth_sense(sufficient)
	auth_if(AUTHTOK,use_first_pass)
	auth_set(AUTHTOK)
	toggle(off)
	arg_boolean(Disable checking of local passwords,nolocal)
	order(65)
module pam_tally
	description(Track failed user login attempts in /var/log/faillog.)
	type(auth)
	type(account)
	use_when(IS_PRIMARY)
	auth_requires(HAS_TTY)
	arg_string(Path to log file used,file=,/var/log/faillog)
	arg_boolean(Reset failed login count on successful login,reset,reset)
	arg_boolean(Deny access even for the root user,no_magic_root)
	toggle(on)
module pam_time
	description(Limit user logins by time of day.)
	configuration(/etc/security/time.conf)
	type(account)
	use_when(IS_PRIMARY)
	requires(HAS_TTY)
	toggle(on)
module pam_unix
	description(Standard password authentication.)
	type(auth)
	type(account)
	type(session)
	type(password)
	auth_sense(sufficient)
	auth_set(AUTHTOK)
	account_sense(required)
	session_sense(required)
	password_if(AUTHTOK,use_authtok)
	global_password_if(MD5,md5)
	global_password_if(SHADOW,shadow)
	password_set(AUTHTOK)
	password_sense(sufficient)
	mandatory
	arg_boolean(Log debugging information to syslog,debug)
	arg_boolean(Support changing passwords over NIS,nis,nis)
	order(55)
module pam_wheel
	description(Require users to be members of the `wheel' group in order to use the `su' command.)
	type(auth)
	type(account)
	use_with(su)
	toggle(off)
	arg_boolean(Log debugging information to syslog,debug)
	global_if(TRUE,use_uid)
	arg_boolean(Allow members of the group to use "su" without being prompted for passwords,trust)
	order(20)
module pam_xauth
	type(session)
	use_when(IS_ADMIN)
	arg_boolean(Log debugging information to syslog,debug)
	toggle(on)
	order(80)
