<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
    <storageModule moduleId="org.eclipse.cdt.core.settings">
        <cconfiguration id="cdt.managedbuild.config.gnu.cross.exe.release.{{ item.name }}">
            <storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.cross.exe.release.{{ item.name }}" moduleId="org.eclipse.cdt.core.settings" name="Release">
                <externalSettings/>
                <extensions>
                    <extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
                    <extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    <extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    <extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    <extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
                    <extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                </extensions>
            </storageModule>
            <storageModule moduleId="cdtBuildSystem" version="4.0.0">
                <configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.cross.exe.release.{{ item.name }}" name="Release" parent="cdt.managedbuild.config.gnu.cross.exe.release">
                    <folderInfo id="cdt.managedbuild.config.gnu.cross.exe.release.{{ item.name }}." name="/" resourcePath="">
                        <toolChain id="cdt.managedbuild.toolchain.gnu.cross.exe.release.{{ item.name }}" name="Cross GCC" superClass="cdt.managedbuild.toolchain.gnu.cross.exe.release">
                            <targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="cdt.managedbuild.targetPlatform.gnu.cross.{{ item.name }}" isAbstract="false" osList="all" superClass="cdt.managedbuild.targetPlatform.gnu.cross"/>
                            <builder buildPath="${workspace_loc:/{{ item.name }}}/Release" id="cdt.managedbuild.builder.gnu.cross.{{ item.name }}" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.builder.gnu.cross"/>
                            <tool id="cdt.managedbuild.tool.gnu.cross.c.compiler.{{ item.name }}" name="Cross GCC Compiler" superClass="cdt.managedbuild.tool.gnu.cross.c.compiler">
                                <option defaultValue="gnu.c.optimization.level.most" id="gnu.c.compiler.option.optimization.level.{{ item.name }}" name="Optimization Level" superClass="gnu.c.compiler.option.optimization.level" useByScannerDiscovery="false" valueType="enumerated"/>
                                <option id="gnu.c.compiler.option.debugging.level.{{ item.name }}" name="Debug Level" superClass="gnu.c.compiler.option.debugging.level" useByScannerDiscovery="false" value="gnu.c.debugging.level.none" valueType="enumerated"/>
                                <option id="gnu.c.compiler.option.include.paths.{{ item.name }}" superClass="gnu.c.compiler.option.include.paths" valueType="includePath">
                                {% for path in item.settings.include_dirs %}    <listOptionValue builtIn="false" value="{{ path | html_quote }}"/>
                                {% endfor %}</option>
                                <option id="gnu.c.compiler.option.preprocessor.def.symbols.{{ item.name }}" superClass="gnu.c.compiler.option.preprocessor.def.symbols" valueType="definedSymbols">
                                {% for symbol in item.settings.symbols %}    <listOptionValue builtIn="false" value="{{ symbol | html_quote  }}"/>
                                {% endfor %}</option>                                
                                <inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.{{ item.name }}" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
                            </tool>
                            <tool id="cdt.managedbuild.tool.gnu.cross.cpp.compiler.{{ item.name }}" name="Cross G++ Compiler" superClass="cdt.managedbuild.tool.gnu.cross.cpp.compiler">
                                <option id="gnu.cpp.compiler.option.optimization.level.{{ item.name }}" name="Optimization Level" superClass="gnu.cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
                                <option id="gnu.cpp.compiler.option.debugging.level.{{ item.name }}" name="Debug Level" superClass="gnu.cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
                            </tool>
                            <tool id="cdt.managedbuild.tool.gnu.cross.c.linker.{{ item.name }}" name="Cross GCC Linker" superClass="cdt.managedbuild.tool.gnu.cross.c.linker">
                                <option id="gnu.c.link.option.libs.{{ item.name }}" superClass="gnu.c.link.option.libs" valueType="libs">
                                {% for lib in item.settings.libs %} <listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="{{ lib | html_quote }}"/>
                                {% endfor %}</option>
                                <inputType id="cdt.managedbuild.tool.gnu.c.linker.input.{{ item.name }}" superClass="cdt.managedbuild.tool.gnu.c.linker.input">
                                    <additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
                                    <additionalInput kind="additionalinput" paths="$(LIBS)"/>
                                </inputType>
                            </tool>
                            <tool id="cdt.managedbuild.tool.gnu.cross.cpp.linker.{{ item.name }}" name="Cross G++ Linker" superClass="cdt.managedbuild.tool.gnu.cross.cpp.linker"/>
                            <tool id="cdt.managedbuild.tool.gnu.cross.archiver.{{ item.name }}" name="Cross GCC Archiver" superClass="cdt.managedbuild.tool.gnu.cross.archiver"/>
                            <tool id="cdt.managedbuild.tool.gnu.cross.assembler.{{ item.name }}" name="Cross GCC Assembler" superClass="cdt.managedbuild.tool.gnu.cross.assembler">
                                <inputType id="cdt.managedbuild.tool.gnu.assembler.input.{{ item.name }}" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
                            </tool>
                        </toolChain>
                    </folderInfo>
                    <sourceEntries>
                        <entry excluding="src" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
                        <entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
                    </sourceEntries>
                </configuration>
            </storageModule>
            <storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
        </cconfiguration>
    </storageModule>
    <storageModule moduleId="cdtBuildSystem" version="4.0.0">
        <project id="{{ item.name }}.cdt.managedbuild.target.gnu.cross.exe.{{ item.name }}" name="Executable" projectType="cdt.managedbuild.target.gnu.cross.exe"/>
    </storageModule>
    <storageModule moduleId="scannerConfiguration">
        <autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
        <scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.cross.exe.release.{{ item.name }};cdt.managedbuild.config.gnu.cross.exe.release.{{ item.name }}.;cdt.managedbuild.tool.gnu.cross.c.compiler.{{ item.name }};cdt.managedbuild.tool.gnu.c.compiler.input.{{ item.name }}">
            <autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
        </scannerConfigBuildInfo>
    </storageModule>
    <storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
    <storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
    <storageModule moduleId="refreshScope" versionNumber="2">
        <configuration configurationName="Release">
            <resource resourceType="PROJECT" workspacePath="/{{ item.name }}"/>
        </configuration>
    </storageModule>
    <storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
</cproject>
