codetemplates.includeGuardGenerationScheme=0
content_assist_proposals_timeout=5000
eclipse.preferences.version=1
editor_folding_default_headers=false
formatter_profile=_SSSD
formatter_settings_version=1
forwardDeclare.compositeTypes=false
forwardDeclare.namespaceElements=false
globalBuildConsole/keepLog=false
hoverModifierMasks=org.eclipse.cdt.ui.BestMatchHover;0;org.eclipse.cdt.debug.internal.ui.editors.DebugTextHover;0;org.eclipse.cdt.ui.ProblemHover;0;org.eclipse.cdt.ui.CDocHover;0;org.eclipse.cdt.ui.CMacroExpansionHover;0;org.eclipse.cdt.ui.CSourceHover;131072;org.eclipse.cdt.ui.AnnotationHover;0;
hoverModifiers=org.eclipse.cdt.ui.BestMatchHover;0;org.eclipse.cdt.debug.internal.ui.editors.DebugTextHover;\!0;org.eclipse.cdt.ui.ProblemHover;\!0;org.eclipse.cdt.ui.CDocHover;\!0;org.eclipse.cdt.ui.CMacroExpansionHover;\!0;org.eclipse.cdt.ui.CSourceHover;Shift;org.eclipse.cdt.ui.AnnotationHover;\!0;
includeStyle.external=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="false" blank_line_before\="false" keep_together\="false" relative_path\="false"/>
includeStyle.inOtherProject=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="false" blank_line_before\="false" keep_together\="true" order\="3" relative_path\="false"/>
includeStyle.inSameProject=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="false" blank_line_before\="false" keep_together\="true" order\="4" relative_path\="false"/>
includeStyle.other=<?xml version\="1.0" encoding\="UTF-8"?>\n<style blank_line_before\="true" keep_together\="true" order\="2"/>
includeStyle.partner=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="false" blank_line_before\="true" keep_together\="true" order\="5" relative_path\="false"/>
includeStyle.related=<?xml version\="1.0" encoding\="UTF-8"?>\n<style blank_line_before\="false" keep_together\="true" order\="6"/>
includeStyle.sameFolder=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="false" blank_line_before\="false" keep_together\="true" order\="6" relative_path\="false"/>
includeStyle.subfolder=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="false" blank_line_before\="false" keep_together\="true" order\="7" relative_path\="false"/>
includeStyle.system=<?xml version\="1.0" encoding\="UTF-8"?>\n<style blank_line_before\="true" keep_together\="true" order\="1"/>
includeStyle.systemWithExtension=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="true" blank_line_before\="false" keep_together\="true" order\="0" relative_path\="false"/>
includeStyle.systemWithoutExtension=<?xml version\="1.0" encoding\="UTF-8"?>\n<style angle_brackets\="true" blank_line_before\="false" keep_together\="true" order\="1" relative_path\="false"/>
nameStyle.constant.prefix=
nameStyle.constant.suffix=
nameStyle.constant.wordDelimiter=_
nameStyle.cpp.header.prefix=
nameStyle.cpp.header.suffix=.h
nameStyle.cpp.header.wordDelimiter=
nameStyle.cpp.source.prefix=
nameStyle.cpp.source.suffix=.cpp
nameStyle.cpp.source.wordDelimiter=
nameStyle.cpp.test.prefix=
nameStyle.cpp.test.suffix=_test.cpp
nameStyle.cpp.test.wordDelimiter=
nameStyle.field.prefix=
nameStyle.field.suffix=
nameStyle.field.wordDelimiter=
nameStyle.getter.prefix=get
nameStyle.getter.prefixForBoolean=is
nameStyle.getter.suffix=
nameStyle.getter.wordDelimiter=
nameStyle.method.prefix=
nameStyle.method.suffix=
nameStyle.method.wordDelimiter=
nameStyle.setter.prefix=set
nameStyle.setter.suffix=
nameStyle.setter.wordDelimiter=
nameStyle.variable.capitalization=2
nameStyle.variable.prefix=
nameStyle.variable.suffix=
nameStyle.variable.wordDelimiter=_
org.eclipse.cdt.ui.formatterprofiles=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<profiles version\="1">\n<profile kind\="CodeFormatterProfile" name\="SSSD" version\="1">\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_exception_specification" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_for" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_brace_in_array_initializer" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_for" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_statements_compare_to_body" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_colon_in_base_clause" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_array_initializer" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_switch" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_conditional_expression" value\="34"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_colon_in_labeled_statement" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_empty_lines" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_cast" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_prefix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_closing_paren_in_cast" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_throws_clause_in_method_declaration" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_enum_declarations" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_binary_operator" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_semicolon" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_binary_expression" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_method_declaration" value\="next_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_semicolon_in_for" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_array_initializer" value\="end_of_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_method_declaration" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_between_empty_braces_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_switch" value\="end_of_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_expression_list" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.keep_else_statement_on_same_line" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_colon_in_base_clause" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_base_types" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.use_tabs_only_for_leading_indentations" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.keep_then_statement_on_same_line" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_at_end_of_file_if_missing" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.comment.line_up_line_comment_in_blocks_on_first_column" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_body_declarations_compare_to_namespace_header" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.keep_empty_array_initializer_on_one_line" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_access_specifier_extra_spaces" value\="0"/>\n<setting id\="org.eclipse.cdt.core.formatter.comment.never_indent_line_comments_on_first_column" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_before_else_in_if_statement" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_expression_list" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_block" value\="end_of_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_bracket" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_base_clause_in_type_declaration" value\="80"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_angle_bracket_in_template_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_declaration_throws" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_member_access" value\="2"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_if" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_namespace_declaration" value\="next_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_block" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_for" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_parameters_in_method_declaration" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.lineSplit" value\="80"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_colon_in_default" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.number_of_empty_lines_to_preserve" value\="1"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_between_empty_brackets" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_angle_bracket_in_template_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_declaration_throws" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_bracket" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_angle_bracket_in_template_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_template_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_compact_if" value\="16"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_prefix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_declarator_list" value\="16"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_expressions_in_array_initializer" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_while" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_exception_specification" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_cast" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.continuation_indentation_for_array_initializer" value\="1"/>\n<setting id\="org.eclipse.cdt.core.formatter.comment.min_distance_between_code_and_line_comment" value\="1"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_bracket" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_constructor_initializer_list" value\="0"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_colon_in_case" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_switch" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_catch" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_exception_specification" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_brace_in_array_initializer" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_declarator_list" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_catch" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_angle_bracket_in_template_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_type_declaration" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_semicolon_in_for" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_if" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_block_in_case" value\="end_of_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_postfix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_closing_angle_bracket_in_template_parameters" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.compact_else_if" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_switchstatements_compare_to_switch" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_overloaded_left_shift_chain" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_before_identifier_in_function_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_in_empty_block" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_declarator_list" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_colon_in_labeled_statement" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_statements_compare_to_block" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_namespace_declaration" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_access_specifier_compare_to_type_header" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_template_parameters" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_if" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_conditional_expression_chain" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.tabulation.char" value\="space"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_after_template_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_before_colon_in_constructor_initializer_list" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_enum_declarations" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_before_catch_in_try_statement" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.brace_position_for_type_declaration" value\="next_line"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_assignment_operator" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_binary_operator" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.keep_imple_if_on_one_line" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.continuation_indentation" value\="1"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_new_line_before_while_in_do_statement" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.put_empty_statement_on_new_line" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_closing_brace_in_block" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.format_guardian_clause_on_one_line" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.indentation.size" value\="4"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_angle_bracket_in_template_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_switch" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_expression_list" value\="0"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_colon_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_unary_operator" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_array_initializer" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_colon_in_case" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_base_types" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_assignment_operator" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_breaks_compare_to_cases" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_switchstatements_compare_to_cases" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_declaration_compare_to_template_header" value\="false"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_angle_bracket_in_template_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_catch" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_arguments_in_method_invocation" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_while" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_exception_specification" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_question_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_switch" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_unary_operator" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.join_wrapped_lines" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_colon_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_postfix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_assignment" value\="18"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_while" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_comma_in_template_arguments" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_after_closing_angle_bracket_in_template_arguments" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_comma_in_template_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_question_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.cdt.core.formatter.indent_body_declarations_compare_to_access_specifier" value\="true"/>\n<setting id\="org.eclipse.cdt.core.formatter.alignment_for_enumerator_list" value\="48"/>\n<setting id\="org.eclipse.cdt.core.formatter.tabulation.size" value\="4"/>\n<setting id\="org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_method_invocation" value\="do not insert"/>\n</profile>\n</profiles>\n
org.eclipse.cdt.ui.formatterprofiles.version=1
org.eclipse.cdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="org.eclipse.cdt.ui.text.codetemplates.filecomment_context" deleted\="false" description\="Comment for created C/C++ files" enabled\="true" id\="org.eclipse.cdt.ui.text.codetemplates.filecomment" name\="filecomment">/*\n    Authors\:\n        Pavel B\u0159ezina &lt;pbrezina@redhat.com&gt;\n\n    Copyright (C) ${year} Red Hat\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see &lt;http\://www.gnu.org/licenses/&gt;.\n*/\n</template><template autoinsert\="false" context\="org.eclipse.cdt.core.cHeader.contenttype_context" deleted\="false" description\="Default template for newly created C header files" enabled\="true" id\="org.eclipse.cdt.ui.text.codetemplates.cheaderfile" name\="Default C header template">${filecomment}\n\#ifndef _${include_guard_symbol}\n\#define _${include_guard_symbol}\n\n${includes}\n\n${declarations}\n\n\#endif /* _${include_guard_symbol} */</template></templates>
org.eclipse.cdt.ui.text.templates.custom=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="org.eclipse.cdt.ui.text.templates.c" deleted\="false" description\="Create temporary talloc context" enabled\="true" name\="tmpctx">tmp_ctx \= talloc_new(NULL);\nif (tmp_ctx \=\= NULL) {\n    DEBUG(SSSDBG_FATAL_FAILURE, "Out of memory\!\\n");\n    return ENOMEM;\n}\n</template><template autoinsert\="true" context\="org.eclipse.cdt.ui.text.templates.c" deleted\="false" description\="Create tevent request" enabled\="true" name\="teventreq">struct ${name}_state {\n\n};\n\nstatic void ${name}_done(struct tevent_req *subreq);\n\nstruct tevent_req *\n${name}_send(TALLOC_CTX *mem_ctx,\n             struct tevent_context *ev,\n\t\t\t ${cursor}...)\n{\n    struct ${name}_state *state;\n    struct tevent_req *subreq;\n    struct tevent_req *req;\n    errno_t ret;\n\n    req \= tevent_req_create(mem_ctx, &amp;state, struct ${name}_state);\n    if (req \=\= NULL) {\n        DEBUG(SSSDBG_CRIT_FAILURE, "Unable to create tevent request\!\\n");\n        return NULL;\n    }\n\n    state-&gt;ev \= ev;\n\n    subreq \= ${subreq}_send(state, ev, ...);\n    if (subreq \=\= NULL) {\n        DEBUG(SSSDBG_CRIT_FAILURE, "Unable to create subrequest\!\\n");\n        ret \= ENOMEM;\n        goto immediately;\n    }\n\n    tevent_req_set_callback(subreq, ${name}_done, req);\n    \n    ret \= EAGAIN;\n    \ndone\:\n    if (ret \=\= EOK) {\n        tevent_req_done(req);\n        tevent_req_post(req, ev);\n    } else if (ret \!\= EAGAIN) {\n        tevent_req_error(req, ret);\n        tevent_req_post(req, ev);\n    }\n\n    return req;\n}\n\nstatic void ${name}_done(struct tevent_req *subreq)\n{\n    struct ${name}_state *state;\n    struct tevent_req *req;\n    errno_t ret;\n\n    req \= tevent_req_callback_data(subreq, struct tevent_req);\n    state \= tevent_req_data(req, struct ${name}_state);\n\n    ret \= ${subreq}_recv(state, subreq, ...);\n    talloc_zfree(subreq);\n    if (ret \!\= EOK) {\n\t\ttevent_req_error(req, ret);\n\t\treturn;\n    }\n\n    tevent_req_done(req);\n    return;\n}\n\nerrno_t ${name}_recv(TALLOC_CTX *mem_ctx,\n                     struct tevent_req *req,\n                     ...)\n{\n    struct ${name}_state *state;\n    state \= tevent_req_data(req, struct ${name}_state);\n\n    TEVENT_REQ_RETURN_ON_ERROR(req);\n\n    return EOK;\n}\n</template><template autoinsert\="true" context\="org.eclipse.cdt.ui.text.templates.c" deleted\="false" description\="Create static tevent request" enabled\="true" name\="steventreq">struct ${name}_state {\n\n};\n\nstatic void ${name}_done(struct tevent_req *subreq);\n\nstatic struct tevent_req *\n${name}_send(TALLOC_CTX *mem_ctx,\n             struct tevent_context *ev,\n\t\t\t ${cursor}...)\n{\n    struct ${name}_state *state;\n    struct tevent_req *subreq;\n    struct tevent_req *req;\n    errno_t ret;\n\n    req \= tevent_req_create(mem_ctx, &amp;state, struct ${name}_state);\n    if (req \=\= NULL) {\n        DEBUG(SSSDBG_CRIT_FAILURE, "Unable to create tevent request\!\\n");\n        return NULL;\n    }\n\n    state-&gt;ev \= ev;\n\n    subreq \= ${subreq}_send(state, ev, ...);\n    if (subreq \=\= NULL) {\n        DEBUG(SSSDBG_CRIT_FAILURE, "Unable to create subrequest\!\\n");\n        ret \= ENOMEM;\n        goto immediately;\n    }\n\n    tevent_req_set_callback(subreq, ${name}_done, req);\n    \n    ret \= EAGAIN;\n    \ndone\:\n    if (ret \=\= EOK) {\n        tevent_req_done(req);\n        tevent_req_post(req, ev);\n    } else if (ret \!\= EAGAIN) {\n        tevent_req_error(req, ret);\n        tevent_req_post(req, ev);\n    }\n\n    return req;\n}\n\nstatic void ${name}_done(struct tevent_req *subreq)\n{\n    struct ${name}_state *state;\n    struct tevent_req *req;\n    errno_t ret;\n\n    req \= tevent_req_callback_data(subreq, struct tevent_req);\n    state \= tevent_req_data(req, struct ${name}_state);\n\n    ret \= ${subreq}_recv(state, subreq, ...);\n    talloc_zfree(subreq);\n    if (ret \!\= EOK) {\n\t\ttevent_req_error(req, ret);\n\t\treturn;\n    }\n\n    tevent_req_done(req);\n    return;\n}\n\nstatic errno_t\n${name}_recv(TALLOC_CTX *mem_ctx,\n             struct tevent_req *req,\n             ...)\n{\n    struct ${name}_state *state;\n    state \= tevent_req_data(req, struct ${name}_state);\n\n    TEVENT_REQ_RETURN_ON_ERROR(req);\n\n    return EOK;\n}\n</template><template autoinsert\="true" context\="org.eclipse.cdt.ui.text.templates.c" deleted\="false" description\="Assign output variable" enabled\="true" name\="outputvar">if (_${var} \!\= NULL) {\n    *_${var} \= talloc_steal(mem_ctx, state-&gt;${var});\n}\n</template></templates>
organizeIncludes.headerSubstitution=<?xml version\="1.0" encoding\="UTF-8"?>\n<maps>\n<map cpp_only\="false" name\="GCC C Header Substitution">\n<unconditional_substitution_map>\n<mapping key\="&lt;asm/errno.h&gt;" value\="&lt;errno.h&gt;"/>\n<mapping key\="&lt;asm/errno-base.h&gt;" value\="&lt;errno.h&gt;"/>\n<mapping key\="&lt;asm/ioctls.h&gt;" value\="&lt;sys/ioctl.h&gt;"/>\n<mapping key\="&lt;asm/posix_types_32.h&gt;" value\="&lt;asm/posix_types.h&gt;"/>\n<mapping key\="&lt;asm/posix_types_64.h&gt;" value\="&lt;asm/posix_types.h&gt;"/>\n<mapping key\="&lt;asm/ptrace-abi.h&gt;" value\="&lt;asm/ptrace.h&gt;"/>\n<mapping key\="&lt;asm/socket.h&gt;" value\="&lt;sys/socket.h&gt;"/>\n<mapping key\="&lt;asm/unistd.h&gt;" value\="&lt;syscall.h&gt;"/>\n<mapping key\="&lt;asm/unistd_32.h&gt;" value\="&lt;syscall.h&gt;"/>\n<mapping key\="&lt;asm/unistd_64.h&gt;" value\="&lt;syscall.h&gt;"/>\n<mapping key\="&lt;bits/a.out.h&gt;" value\="&lt;a.out.h&gt;"/>\n<mapping key\="&lt;bits/byteswap.h&gt;" value\="&lt;byteswap.h&gt;"/>\n<mapping key\="&lt;bits/cmathcalls.h&gt;" value\="&lt;complex.h&gt;"/>\n<mapping key\="&lt;bits/confname.h&gt;" value\="&lt;unistd.h&gt;"/>\n<mapping key\="&lt;bits/dirent.h&gt;" value\="&lt;dirent.h&gt;"/>\n<mapping key\="&lt;bits/dlfcn.h&gt;" value\="&lt;dlfcn.h&gt;"/>\n<mapping key\="&lt;bits/elfclass.h&gt;" value\="&lt;link.h&gt;"/>\n<mapping key\="&lt;bits/endian.h&gt;" value\="&lt;endian.h&gt;"/>\n<mapping key\="&lt;bits/environments.h&gt;" value\="&lt;unistd.h&gt;"/>\n<mapping key\="&lt;bits/errno.h&gt;" value\="&lt;errno.h&gt;"/>\n<mapping key\="&lt;bits/error.h&gt;" value\="&lt;error.h&gt;"/>\n<mapping key\="&lt;bits/fcntl.h&gt;" value\="&lt;fcntl.h&gt;"/>\n<mapping key\="&lt;bits/fcntl-linux.h&gt;" value\="&lt;fcntl.h&gt;"/>\n<mapping key\="&lt;bits/fcntl2.h&gt;" value\="&lt;fcntl.h&gt;"/>\n<mapping key\="&lt;bits/fenv.h&gt;" value\="&lt;fenv.h&gt;"/>\n<mapping key\="&lt;bits/fenvinline.h&gt;" value\="&lt;fenv.h&gt;"/>\n<mapping key\="&lt;bits/huge_val.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/huge_valf.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/huge_vall.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/in.h&gt;" value\="&lt;netinet/in.h&gt;"/>\n<mapping key\="&lt;bits/inf.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/ioctl-types.h&gt;" value\="&lt;sys/ioctl.h&gt;"/>\n<mapping key\="&lt;bits/ioctls.h&gt;" value\="&lt;sys/ioctl.h&gt;"/>\n<mapping key\="&lt;bits/ipc.h&gt;" value\="&lt;sys/ipc.h&gt;"/>\n<mapping key\="&lt;bits/ipctypes.h&gt;" value\="&lt;sys/ipc.h&gt;"/>\n<mapping key\="&lt;bits/libio-ldbl.h&gt;" value\="&lt;libio.h&gt;"/>\n<mapping key\="&lt;bits/link.h&gt;" value\="&lt;link.h&gt;"/>\n<mapping key\="&lt;bits/locale.h&gt;" value\="&lt;locale.h&gt;"/>\n<mapping key\="&lt;bits/mathcalls.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/mathdef.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/mathinline.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/mman.h&gt;" value\="&lt;sys/mman.h&gt;"/>\n<mapping key\="&lt;bits/monetary-ldbl.h&gt;" value\="&lt;monetary.h&gt;"/>\n<mapping key\="&lt;bits/mqueue.h&gt;" value\="&lt;mqueue.h&gt;"/>\n<mapping key\="&lt;bits/mqueue2.h&gt;" value\="&lt;mqueue.h&gt;"/>\n<mapping key\="&lt;bits/msq.h&gt;" value\="&lt;sys/msg.h&gt;"/>\n<mapping key\="&lt;bits/nan.h&gt;" value\="&lt;math.h&gt;"/>\n<mapping key\="&lt;bits/netdb.h&gt;" value\="&lt;netdb.h&gt;"/>\n<mapping key\="&lt;bits/poll.h&gt;" value\="&lt;poll.h&gt;"/>\n<mapping key\="&lt;bits/posix_opt.h&gt;" value\="&lt;unistd.h&gt;"/>\n<mapping key\="&lt;bits/posix1_lim.h&gt;" value\="&lt;limits.h&gt;"/>\n<mapping key\="&lt;bits/posix2_lim.h&gt;" value\="&lt;limits.h&gt;"/>\n<mapping key\="&lt;bits/predefs.h&gt;" value\="&lt;features.h&gt;"/>\n<mapping key\="&lt;bits/printf-ldbl.h&gt;" value\="&lt;printf.h&gt;"/>\n<mapping key\="&lt;bits/pthreadtypes.h&gt;" value\="&lt;pthread.h&gt;"/>\n<mapping key\="&lt;bits/resource.h&gt;" value\="&lt;sys/resource.h&gt;"/>\n<mapping key\="&lt;bits/sched.h&gt;" value\="&lt;sched.h&gt;"/>\n<mapping key\="&lt;bits/select.h&gt;" value\="&lt;sys/select.h&gt;"/>\n<mapping key\="&lt;bits/sem.h&gt;" value\="&lt;sys/sem.h&gt;"/>\n<mapping key\="&lt;bits/semaphore.h&gt;" value\="&lt;semaphore.h&gt;"/>\n<mapping key\="&lt;bits/setjmp.h&gt;" value\="&lt;setjmp.h&gt;"/>\n<mapping key\="&lt;bits/shm.h&gt;" value\="&lt;sys/shm.h&gt;"/>\n<mapping key\="&lt;bits/sigaction.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/sigcontext.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/siginfo.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/signum.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/sigset.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/sigstack.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/sigthread.h&gt;" value\="&lt;signal.h&gt;"/>\n<mapping key\="&lt;bits/sockaddr.h&gt;" value\="&lt;sys/un.h&gt;"/>\n<mapping key\="&lt;bits/socket.h&gt;" value\="&lt;sys/socket.h&gt;"/>\n<mapping key\="&lt;bits/stab.def&gt;" value\="&lt;stab.h&gt;"/>\n<mapping key\="&lt;bits/stat.h&gt;" value\="&lt;sys/stat.h&gt;"/>\n<mapping key\="&lt;bits/statfs.h&gt;" value\="&lt;sys/statfs.h&gt;"/>\n<mapping key\="&lt;bits/statvfs.h&gt;" value\="&lt;sys/statvfs.h&gt;"/>\n<mapping key\="&lt;bits/stdio.h&gt;" value\="&lt;stdio.h&gt;"/>\n<mapping key\="&lt;bits/stdio_lim.h&gt;" value\="&lt;stdio.h&gt;"/>\n<mapping key\="&lt;bits/stdio-ldbl.h&gt;" value\="&lt;stdio.h&gt;"/>\n<mapping key\="&lt;bits/stdio-lock.h&gt;" value\="&lt;libio.h&gt;"/>\n<mapping key\="&lt;bits/stdio2.h&gt;" value\="&lt;stdio.h&gt;"/>\n<mapping key\="&lt;bits/stdlib.h&gt;" value\="&lt;stdlib.h&gt;"/>\n<mapping key\="&lt;bits/stdlib-ldbl.h&gt;" value\="&lt;stdlib.h&gt;"/>\n<mapping key\="&lt;bits/string.h&gt;" value\="&lt;string.h&gt;"/>\n<mapping key\="&lt;bits/string2.h&gt;" value\="&lt;string.h&gt;"/>\n<mapping key\="&lt;bits/string3.h&gt;" value\="&lt;string.h&gt;"/>\n<mapping key\="&lt;bits/stropts.h&gt;" value\="&lt;stropts.h&gt;"/>\n<mapping key\="&lt;bits/sys_errlist.h&gt;" value\="&lt;stdio.h&gt;"/>\n<mapping key\="&lt;bits/syscall.h&gt;" value\="&lt;syscall.h&gt;"/>\n<mapping key\="&lt;bits/syslog.h&gt;" value\="&lt;syslog.h&gt;"/>\n<mapping key\="&lt;bits/syslog-ldbl.h&gt;" value\="&lt;syslog.h&gt;"/>\n<mapping key\="&lt;bits/syslog-path.h&gt;" value\="&lt;syslog.h&gt;"/>\n<mapping key\="&lt;bits/termios.h&gt;" value\="&lt;termios.h&gt;"/>\n<mapping key\="&lt;bits/time.h&gt;" value\="&lt;sys/time.h&gt;"/>\n<mapping key\="&lt;bits/types.h&gt;" value\="&lt;sys/types.h&gt;"/>\n<mapping key\="&lt;bits/uio.h&gt;" value\="&lt;sys/uio.h&gt;"/>\n<mapping key\="&lt;bits/unistd.h&gt;" value\="&lt;unistd.h&gt;"/>\n<mapping key\="&lt;bits/ustat.h&gt;" value\="&lt;ustat.h&gt;"/>\n<mapping key\="&lt;bits/utmp.h&gt;" value\="&lt;utmp.h&gt;"/>\n<mapping key\="&lt;bits/utmpx.h&gt;" value\="&lt;utmpx.h&gt;"/>\n<mapping key\="&lt;bits/utsname.h&gt;" value\="&lt;sys/utsname.h&gt;"/>\n<mapping key\="&lt;bits/waitflags.h&gt;" value\="&lt;sys/wait.h&gt;"/>\n<mapping key\="&lt;bits/waitstatus.h&gt;" value\="&lt;sys/wait.h&gt;"/>\n<mapping key\="&lt;bits/wchar.h&gt;" value\="&lt;wchar.h&gt;"/>\n<mapping key\="&lt;bits/wchar-ldbl.h&gt;" value\="&lt;wchar.h&gt;"/>\n<mapping key\="&lt;bits/wchar2.h&gt;" value\="&lt;wchar.h&gt;"/>\n<mapping key\="&lt;bits/xopen_lim.h&gt;" value\="&lt;limits.h&gt;"/>\n<mapping key\="&lt;bits/xtitypes.h&gt;" value\="&lt;stropts.h&gt;"/>\n<mapping key\="&lt;linux/errno.h&gt;" value\="&lt;errno.h&gt;"/>\n<mapping key\="&lt;linux/limits.h&gt;" value\="&lt;limits.h&gt;"/>\n<mapping key\="&lt;linux/socket.h&gt;" value\="&lt;sys/socket.h&gt;"/>\n<mapping key\="&lt;sys/poll.h&gt;" value\="&lt;poll.h&gt;"/>\n<mapping key\="&lt;sys/syscall.h&gt;" value\="&lt;syscall.h&gt;"/>\n<mapping key\="&lt;sys/syslog.h&gt;" value\="&lt;syslog.h&gt;"/>\n<mapping key\="&lt;sys/ucontext.h&gt;" value\="&lt;ucontext.h&gt;"/>\n<mapping key\="&lt;sys/ustat.h&gt;" value\="&lt;ustat.h&gt;"/>\n<mapping key\="&lt;wait.h&gt;" value\="&lt;sys/wait.h&gt;"/>\n</unconditional_substitution_map>\n<optional_substitution_map/>\n</map>\n<map cpp_only\="true" name\="GCC C++ Header Substitution">\n<unconditional_substitution_map>\n<mapping key\="&lt;auto_ptr.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;backward/auto_ptr.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;backward/binders.h&gt;" value\="&lt;functional&gt;"/>\n<mapping key\="&lt;backward/hash_fun.h&gt;" value\="&lt;hash_map&gt;"/>\n<mapping key\="&lt;backward/hashtable.h&gt;" value\="&lt;hash_map&gt;"/>\n<mapping key\="&lt;backward/strstream&gt;" value\="&lt;strstream&gt;"/>\n<mapping key\="&lt;binders.h&gt;" value\="&lt;functional&gt;"/>\n<mapping key\="&lt;bits/algorithmfwd.h&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;bits/allocator.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/atomic_word.h&gt;" value\="&lt;ext/atomicity.h&gt;"/>\n<mapping key\="&lt;bits/basic_file.h&gt;" value\="&lt;fstream&gt;"/>\n<mapping key\="&lt;bits/basic_ios.h&gt;" value\="&lt;ios&gt;"/>\n<mapping key\="&lt;bits/basic_string.h&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;bits/basic_string.tcc&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;bits/boost_concept_check.h&gt;" value\="&lt;bits/concept_check.h&gt;"/>\n<mapping key\="&lt;bits/boost_sp_shared_count.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/c++allocator.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/c++config.h&gt;" value\="&lt;cstddef&gt;"/>\n<mapping key\="&lt;bits/c++io.h&gt;" value\="&lt;ext/stdio_sync_filebuf.h&gt;"/>\n<mapping key\="&lt;bits/char_traits.h&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;bits/cmath.tcc&gt;" value\="&lt;cmath&gt;"/>\n<mapping key\="&lt;bits/codecvt.h&gt;" value\="&lt;fstream&gt;"/>\n<mapping key\="&lt;bits/ctype_base.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/ctype_inline.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/cxxabi_tweaks.h&gt;" value\="&lt;cxxabi.h&gt;"/>\n<mapping key\="&lt;bits/deque.tcc&gt;" value\="&lt;deque&gt;"/>\n<mapping key\="&lt;bits/exception_defines.h&gt;" value\="&lt;exception&gt;"/>\n<mapping key\="&lt;bits/fstream.tcc&gt;" value\="&lt;fstream&gt;"/>\n<mapping key\="&lt;bits/functexcept.h&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;bits/functional_hash.h&gt;" value\="&lt;unordered_map&gt;"/>\n<mapping key\="&lt;bits/gslice.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/gslice_array.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/hashtable.h&gt;" value\="&lt;unordered_map&gt;"/>\n<mapping key\="&lt;bits/indirect_array.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/ios_base.h&gt;" value\="&lt;ios&gt;"/>\n<mapping key\="&lt;bits/istream.tcc&gt;" value\="&lt;istream&gt;"/>\n<mapping key\="&lt;bits/list.tcc&gt;" value\="&lt;list&gt;"/>\n<mapping key\="&lt;bits/locale_classes.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/locale_classes.tcc&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/locale_facets.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/locale_facets.tcc&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/locale_facets_nonio.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/locale_facets_nonio.tcc&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/localefwd.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/mask_array.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/messages_members.h&gt;" value\="&lt;locale&gt;"/>\n<mapping key\="&lt;bits/move.h&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;bits/ostream.tcc&gt;" value\="&lt;ostream&gt;"/>\n<mapping key\="&lt;bits/ostream_insert.h&gt;" value\="&lt;ostream&gt;"/>\n<mapping key\="&lt;bits/postypes.h&gt;" value\="&lt;iostream&gt;"/>\n<mapping key\="&lt;bits/shared_ptr.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/slice_array.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/sstream.tcc&gt;" value\="&lt;sstream&gt;"/>\n<mapping key\="&lt;bits/stl_algo.h&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;bits/stl_algobase.h&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;bits/stl_bvector.h&gt;" value\="&lt;vector&gt;"/>\n<mapping key\="&lt;bits/stl_construct.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/stl_deque.h&gt;" value\="&lt;deque&gt;"/>\n<mapping key\="&lt;bits/stl_function.h&gt;" value\="&lt;functional&gt;"/>\n<mapping key\="&lt;bits/stl_heap.h&gt;" value\="&lt;queue&gt;"/>\n<mapping key\="&lt;bits/stl_iterator.h&gt;" value\="&lt;iterator&gt;"/>\n<mapping key\="&lt;bits/stl_iterator_base_funcs.h&gt;" value\="&lt;iterator&gt;"/>\n<mapping key\="&lt;bits/stl_iterator_base_types.h&gt;" value\="&lt;iterator&gt;"/>\n<mapping key\="&lt;bits/stl_list.h&gt;" value\="&lt;list&gt;"/>\n<mapping key\="&lt;bits/stl_map.h&gt;" value\="&lt;map&gt;"/>\n<mapping key\="&lt;bits/stl_move.h&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;bits/stl_multimap.h&gt;" value\="&lt;map&gt;"/>\n<mapping key\="&lt;bits/stl_multiset.h&gt;" value\="&lt;set&gt;"/>\n<mapping key\="&lt;bits/stl_numeric.h&gt;" value\="&lt;numeric&gt;"/>\n<mapping key\="&lt;bits/stl_pair.h&gt;" value\="&lt;utility&gt;"/>\n<mapping key\="&lt;bits/stl_queue.h&gt;" value\="&lt;queue&gt;"/>\n<mapping key\="&lt;bits/stl_raw_storage_iter.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/stl_relops.h&gt;" value\="&lt;utility&gt;"/>\n<mapping key\="&lt;bits/stl_set.h&gt;" value\="&lt;set&gt;"/>\n<mapping key\="&lt;bits/stl_stack.h&gt;" value\="&lt;stack&gt;"/>\n<mapping key\="&lt;bits/stl_tempbuf.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/stl_tree.h&gt;" value\="&lt;map&gt;"/>\n<mapping key\="&lt;bits/stl_uninitialized.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/stl_vector.h&gt;" value\="&lt;vector&gt;"/>\n<mapping key\="&lt;bits/stream_iterator.h&gt;" value\="&lt;iterator&gt;"/>\n<mapping key\="&lt;bits/streambuf.tcc&gt;" value\="&lt;streambuf&gt;"/>\n<mapping key\="&lt;bits/streambuf_iterator.h&gt;" value\="&lt;iterator&gt;"/>\n<mapping key\="&lt;bits/stringfwd.h&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;bits/unique_ptr.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;bits/valarray_after.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/valarray_array.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/valarray_array.tcc&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/valarray_before.h&gt;" value\="&lt;valarray&gt;"/>\n<mapping key\="&lt;bits/vector.tcc&gt;" value\="&lt;vector&gt;"/>\n<mapping key\="&lt;debug/safe_iterator.tcc&gt;" value\="&lt;debug/safe_iterator.h&gt;"/>\n<mapping key\="&lt;exception_defines.h&gt;" value\="&lt;exception&gt;"/>\n<mapping key\="&lt;ext/algorithm&gt;" value\="&lt;algorithm&gt;"/>\n<mapping key\="&lt;ext/functional&gt;" value\="&lt;functional&gt;"/>\n<mapping key\="&lt;ext/hash_map&gt;" value\="&lt;hash_map&gt;"/>\n<mapping key\="&lt;ext/hash_set&gt;" value\="&lt;hash_set&gt;"/>\n<mapping key\="&lt;ext/numeric&gt;" value\="&lt;numeric&gt;"/>\n<mapping key\="&lt;ext/slist&gt;" value\="&lt;slist&gt;"/>\n<mapping key\="&lt;ext/sso_string_base.h&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;ext/vstring.h&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;ext/vstring.tcc&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;ext/vstring_fwd.h&gt;" value\="&lt;string&gt;"/>\n<mapping key\="&lt;hash_fun.h&gt;" value\="&lt;hash_map&gt;"/>\n<mapping key\="&lt;hashtable.h&gt;" value\="&lt;hash_map&gt;"/>\n<mapping key\="&lt;tr1/bessel_function.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/beta_function.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/ell_integral.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/exp_integral.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/gamma.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/hypergeometric.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/legendre_function.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/modified_bessel_func.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/poly_hermite.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/poly_laguerre.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1/riemann_zeta.tcc&gt;" value\="&lt;tr1/cmath&gt;"/>\n<mapping key\="&lt;tr1_impl/array&gt;" value\="&lt;array&gt;"/>\n<mapping key\="&lt;tr1_impl/boost_shared_ptr.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;tr1_impl/boost_sp_counted_base.h&gt;" value\="&lt;memory&gt;"/>\n<mapping key\="&lt;tr1_impl/cctype&gt;" value\="&lt;cctype&gt;"/>\n<mapping key\="&lt;tr1_impl/cfenv&gt;" value\="&lt;cfenv&gt;"/>\n<mapping key\="&lt;tr1_impl/cinttypes&gt;" value\="&lt;cinttypes&gt;"/>\n<mapping key\="&lt;tr1_impl/cmath&gt;" value\="&lt;cmath&gt;"/>\n<mapping key\="&lt;tr1_impl/complex&gt;" value\="&lt;complex&gt;"/>\n<mapping key\="&lt;tr1_impl/cstdint&gt;" value\="&lt;cstdint&gt;"/>\n<mapping key\="&lt;tr1_impl/cstdio&gt;" value\="&lt;cstdio&gt;"/>\n<mapping key\="&lt;tr1_impl/cstdlib&gt;" value\="&lt;cstdlib&gt;"/>\n<mapping key\="&lt;tr1_impl/cwchar&gt;" value\="&lt;cwchar&gt;"/>\n<mapping key\="&lt;tr1_impl/cwctype&gt;" value\="&lt;cwctype&gt;"/>\n<mapping key\="&lt;tr1_impl/functional&gt;" value\="&lt;functional&gt;"/>\n<mapping key\="&lt;tr1_impl/functional_hash.h&gt;" value\="&lt;tr1/functional_hash.h&gt;"/>\n<mapping key\="&lt;tr1_impl/hashtable&gt;" value\="&lt;tr1/hashtable.h&gt;"/>\n<mapping key\="&lt;tr1_impl/random&gt;" value\="&lt;random&gt;"/>\n<mapping key\="&lt;tr1_impl/random.tcc&gt;" value\="&lt;random&gt;"/>\n<mapping key\="&lt;tr1_impl/regex&gt;" value\="&lt;regex&gt;"/>\n<mapping key\="&lt;tr1_impl/type_traits&gt;" value\="&lt;tr1/type_traits&gt;"/>\n<mapping key\="&lt;tr1_impl/unordered_map&gt;" value\="&lt;tr1/unordered_map&gt;"/>\n<mapping key\="&lt;tr1_impl/unordered_set&gt;" value\="&lt;tr1/unordered_set&gt;"/>\n<mapping key\="&lt;tr1_impl/utility&gt;" value\="&lt;tr1/utility&gt;"/>\n</unconditional_substitution_map>\n<optional_substitution_map>\n<mapping key\="&lt;assert.h&gt;" value\="&lt;cassert&gt;"/>\n<mapping key\="&lt;complex.h&gt;" value\="&lt;ccomplex&gt;"/>\n<mapping key\="&lt;ctype.h&gt;" value\="&lt;cctype&gt;"/>\n<mapping key\="&lt;errno.h&gt;" value\="&lt;cerrno&gt;"/>\n<mapping key\="&lt;fenv.h&gt;" value\="&lt;cfenv&gt;"/>\n<mapping key\="&lt;float.h&gt;" value\="&lt;cfloat&gt;"/>\n<mapping key\="&lt;inttypes.h&gt;" value\="&lt;cinttypes&gt;"/>\n<mapping key\="&lt;ios&gt;" value\="&lt;iostream&gt;"/>\n<mapping key\="&lt;ios&gt;" value\="&lt;istream&gt;"/>\n<mapping key\="&lt;ios&gt;" value\="&lt;ostream&gt;"/>\n<mapping key\="&lt;iosfwd&gt;" value\="&lt;ios&gt;"/>\n<mapping key\="&lt;iosfwd&gt;" value\="&lt;streambuf&gt;"/>\n<mapping key\="&lt;iso646.h&gt;" value\="&lt;ciso646&gt;"/>\n<mapping key\="&lt;istream&gt;" value\="&lt;iostream&gt;"/>\n<mapping key\="&lt;istream&gt;" value\="&lt;fstream&gt;"/>\n<mapping key\="&lt;istream&gt;" value\="&lt;sstream&gt;"/>\n<mapping key\="&lt;limits.h&gt;" value\="&lt;climits&gt;"/>\n<mapping key\="&lt;locale.h&gt;" value\="&lt;clocale&gt;"/>\n<mapping key\="&lt;math.h&gt;" value\="&lt;cmath&gt;"/>\n<mapping key\="&lt;ostream&gt;" value\="&lt;iostream&gt;"/>\n<mapping key\="&lt;ostream&gt;" value\="&lt;fstream&gt;"/>\n<mapping key\="&lt;ostream&gt;" value\="&lt;istream&gt;"/>\n<mapping key\="&lt;ostream&gt;" value\="&lt;sstream&gt;"/>\n<mapping key\="&lt;setjmp.h&gt;" value\="&lt;csetjmp&gt;"/>\n<mapping key\="&lt;signal.h&gt;" value\="&lt;csignal&gt;"/>\n<mapping key\="&lt;stdarg.h&gt;" value\="&lt;cstdarg&gt;"/>\n<mapping key\="&lt;stdbool.h&gt;" value\="&lt;cstdbool&gt;"/>\n<mapping key\="&lt;stddef.h&gt;" value\="&lt;cstddef&gt;"/>\n<mapping key\="&lt;stdint.h&gt;" value\="&lt;cstdint&gt;"/>\n<mapping key\="&lt;stdio.h&gt;" value\="&lt;cstdio&gt;"/>\n<mapping key\="&lt;stdlib.h&gt;" value\="&lt;cstdlib&gt;"/>\n<mapping key\="&lt;streambuf&gt;" value\="&lt;ios&gt;"/>\n<mapping key\="&lt;string.h&gt;" value\="&lt;cstring&gt;"/>\n<mapping key\="&lt;tgmath.h&gt;" value\="&lt;ctgmath&gt;"/>\n<mapping key\="&lt;time.h&gt;" value\="&lt;ctime&gt;"/>\n<mapping key\="&lt;wchar.h&gt;" value\="&lt;cwchar&gt;"/>\n<mapping key\="&lt;wctype.h&gt;" value\="&lt;cwctype&gt;"/>\n</optional_substitution_map>\n</map>\n</maps>
organizeIncludes.unusedStatements=COMMENT_OUT
scalability.detect=false
sourceHoverBackgroundColor=0,0,0
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
